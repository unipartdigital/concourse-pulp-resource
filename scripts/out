#!/bin/bash -exu
# vim: set ft=sh

set -e -u

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

TMPDIR=${TMPDIR:-/tmp}
source "$(dirname "$0")/common.sh"
payload="$(mktemp "${TMPDIR}/pulp-resource.XXXXXX")"
if [[ ${PULP_TESTING} == "true" ]]; then
  cat > "${payload}" <./payload
else
  cat > "${payload}" <&0
fi
pre_flight "${payload}"

UPLOAD_DEBUGS="$(jq -r '.params.debug // ""' < ${payload})"

# ### Check repo exists and get repo href
REPO_HREF=$(http GET ${ENDPOINT}/pulp/api/v3/repositories/${REPO_TYPE}/?name=${REPO_NAME} Authorization:"${BASIC_AUTH}" | jq -r '.results[0].pulp_href')
if [[ $REPO_HREF == "null" ]]; then
  REPO_HREF=$(http POST ${ENDPOINT}/pulp/api/v3/repositories/${REPO_TYPE}/ name="${REPO_NAME}" Authorization:"${BASIC_AUTH}" | jq -r '.pulp_href')
fi
export REPO_HREF

if [[ "${PACKAGE_TYPE}" == "deb" ]]; then
  source out.d/deb.sh "$@"
fi

TASK_URL=$(http POST ${BASE_ADDR}/pulp/api/v3/publications/${REPO_TYPE}/ repository="${REPO_HREF}" simple=true Authorization:"${BASIC_AUTH}" | jq -r '.task')
sleep 5
PUBLICATION_HREF=$(http GET ${BASE_ADDR}${TASK_URL} Authorization:"${BASIC_AUTH}" | jq -r '.created_resources | first')

OLD_DIST_HREF=$(http GET ${BASE_ADDR}/pulp/api/v3/distributions/${REPO_TYPE}/?base_path=${REPO_NAME} Authorization:"${BASIC_AUTH}" | jq -r '.results[0].pulp_href')
http DELETE ${BASE_ADDR}${OLD_DIST_HREF} Authorization:"${BASIC_AUTH}" | jq -r '.task'
sleep 5

TASK_URL=$(http POST ${BASE_ADDR}/pulp/api/v3/distributions/${REPO_TYPE}/ publication="$PUBLICATION_HREF" name="${REPO_NAME}" base_path="${REPO_NAME}" Authorization:"${BASIC_AUTH}" | jq -r '.task')
sleep 5

DISTRIBUTION_HREF=$(http ${BASE_ADDR}${TASK_URL} Authorization:"${BASIC_AUTH}" | jq -r '.created_resources | first')
